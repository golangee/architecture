apply:
  - arch/go/Interface@v1.0.0

# @doc ...is a repository to handle books.
# type BookRepository interface{
#   @doc ... returns all books.
#   @param offset ... is the offset to return the entries for paging.
#   @param limit ...is the maximum amount of entries to return.
#   @return []Book ...is the list of books.
#   ReadAll(ctx ctx!, offset int64!, limit int64!) ([]Book, err!)
# }

# @doc ...is a repository to handle books.
# interface BookRepository {
#   @doc ... returns all books.
#   @param offset ... is the offset to return the entries for paging.
#   @param limit ...is the maximum amount of entries to return.
#   @param books ...is the returned list of books.
#   ReadAll(ctx ctx!, offset int64!, limit int64!) (books []Book, err error!)
#
# }

# <type doc="...is a repository to handle books." name="BookRepository">
#   <ReadAll>
#      <in>
#         <offset type="int64!" doc="... is the offset to return the entries for paging."/>
#      </in>
#   </ReadAll>
# </type>

interface:
  BookRepository:
    //: ...is a repository to handle books.

    ReadAll:
      //: ...returns all books.
      in:
        ctx!:
        offset: { type: int64!, //: ... is the offset to return the entries for paging. }
        limit: { type: int64!, //: ...is the maximum amount of entries to return. }
      out:
        books: { type: slice!<Book>, //: ...is the list of books. }
        err!:

    Count:
      //: ...enumerates all stored elements.
      out:
        n: { type: int64!, //: ...is the actual count. }
        error!:

    FindOne:
      //: ...finds the first element by its id.
      in:
        id: { type: uuid!, //: ...the unique id. }
      out:
        obj: { type: Book, //: ...the found book, if any. }
        err!:



type:
  BookRepository:
    description: ...is a repository to handle books.
    methods:
      ReadAll:
        description: ...returns all books.
        in:
          offset:
            description: ...is the offset to return the entries for paging.
            in:
              ctx!: #this is a template for a std type def and description
              offset:
                description: ...is the offset to return the entries for paging.
                type: int64!
              limit:
                description: ...is the maximum amount of entries to return.
                type: int64!
        out:
          books:
            description: ...is the list of books.
            type: "[]Book"
          err!: # another template for std type def and description
      Count:
        description: ...enumerates all stored elements.
        in:
          tx!:
          out:
            n:
              description: ...is the actual count.
              type: int64!
            err!:
      FindOne:
        description: ...finds exactly one entry.
        in:
          ctx!:
          id:
            description: ...is the data transfer object to read into.
            type: uuid!




