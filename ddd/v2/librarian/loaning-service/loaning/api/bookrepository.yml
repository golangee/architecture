error:
  BookRepositoryError:
    doc: ...is the supertype or enum of all repository errors. It is common for all repository functions.
    Other: ...is returned if the reason is undefined, like an I/O error.
    NotFound: ...is returned if an entity was expected but not found.
    AlreadyExists: ...is returned if an enity should not exist but was found.

interface:
  BookRepository:
    doc: ...is a repository to handle books.

    ReadAll:
      doc: ...returns all books.
      in:
        ctx!:
        offset: { type: int64!, doc: ... is the offset to return the entries for paging. }
        limit: { type: int64!, doc: ...is the maximum amount of entries to return. }
      out:
        books: { type: slice!<Book>, doc: ...is the list of books. }
        err!:

    Count:
      doc: ...enumerates all stored elements.
      out:
        n: { type: int64!, doc: ...is the actual count. }
        error:
          - Other

    FindOne:
      doc: ...finds the first element by its id.
      in:
        id: { type: uuid!, doc: ...the unique id. }
      out:
        obj: { type: Book, doc: ...is the found book, if any. }
        error:
          - ConnectionError
          -

