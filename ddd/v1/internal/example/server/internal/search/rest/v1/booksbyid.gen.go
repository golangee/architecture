// Code generated by golangee/architecture. DO NOT EDIT.

package rest

import (
	uuid "github.com/golangee/uuid"
	http "net/http"
)

// BooksByIdGetContext provides the specific http request and response context including already parsed parameters.
type BooksByIdGetContext struct {
	// Request contains the raw http request.
	Request *http.Request
	// Writer contains a reference to the raw http response writer.
	Writer http.ResponseWriter
	// ClientId contains the parsed header parameter for 'clientId'.
	ClientId string
}

// BooksByIdDeleteContext provides the specific http request and response context including already parsed parameters.
type BooksByIdDeleteContext struct {
	// Request contains the raw http request.
	Request *http.Request
	// Writer contains a reference to the raw http response writer.
	Writer http.ResponseWriter
	// ClientId contains the parsed header parameter for 'clientId'.
	ClientId string
}

// BooksByIdPutContext provides the specific http request and response context including already parsed parameters.
type BooksByIdPutContext struct {
	// Request contains the raw http request.
	Request *http.Request
	// Writer contains a reference to the raw http response writer.
	Writer http.ResponseWriter
	// ClientId contains the parsed header parameter for 'clientId'.
	ClientId string
}

// BooksByIdPostContext provides the specific http request and response context including already parsed parameters.
type BooksByIdPostContext struct {
	// Request contains the raw http request.
	Request *http.Request
	// Writer contains a reference to the raw http response writer.
	Writer http.ResponseWriter
	// ClientId contains the parsed header parameter for 'clientId'.
	ClientId string
	// Id contains the parsed path parameter for 'id'.
	Id uuid.UUID
	// Bearer contains the parsed header parameter for 'bearer'.
	Bearer string
	// XSpecialSomething contains the parsed header parameter for 'x-special-something'.
	XSpecialSomething string
	// Offset contains the parsed query parameter for 'offset'.
	Offset int64
	// Limit contains the parsed query parameter for 'limit'.
	Limit int64
}

// BooksById represents the REST resource api/v1/books/:id.
// Resource to manage a single book.
type BooksById interface {
	// Get represents the http GET request on the /books/:id resource.
	// Returns a single book.
	Get(ctx BooksByIdGetContext) error
	// Delete represents the http DELETE request on the /books/:id resource.
	// Removes a single book.
	Delete(ctx BooksByIdDeleteContext) error
	// Put represents the http PUT request on the /books/:id resource.
	// Updates a book.
	Put(ctx BooksByIdPutContext) error
	// Post represents the http POST request on the /books/:id resource.
	// Creates a new book.
	Post(ctx BooksByIdPostContext) error
}
