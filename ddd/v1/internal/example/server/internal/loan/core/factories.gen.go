// Code generated by golangee/architecture. DO NOT EDIT.

package core

import (
	json "encoding/json"
	flag "flag"
	os "os"
)

// LoanServiceFactory is the factory function to create a new instance of LoanService.
//
// The parameter 'opts' contains the options to create the instance.
//
// The result 'LoanService' is the new instance or nil in case of an error.
//
// The result 'error' indicates a violation of pre- or invariants and represents an implementation specific failure.
var LoanServiceFactory = func(opts LoanServiceOpts) (LoanService, error) {
	return &LoanServiceMock{}, nil
}

// LoanServiceOpts provides the options for creating a new instance of LoanService.
type LoanServiceOpts struct {
	// Test a test string.
	Test string `json:"test"`
}

// String serializes the struct into a json string.
func (l *LoanServiceOpts) String() string {
	buf, err := json.Marshal(l)
	if err != nil {
		panic("invalid state: " + err.Error())
	}

	return string(buf)
}

// Parse tries to parse the given buffer as json and updates the current values accordingly.
func (l *LoanServiceOpts) Parse(buf []byte) error {
	if err := json.Unmarshal(buf, l); err != nil {
		return err
	}

	return nil
}

// ConfigureFlags configures the flags to be ready to get evaluated. The default values are taken from the struct at calling time.
// After calling, use flag.Parse() to load the values. You can only use it once, otherwise the flag package will panic.
// The following flags will be tied to this instance:
//  * Test is parsed from flag 'loan-core-test'
func (l *LoanServiceOpts) ConfigureFlags() {
	flag.StringVar(&l.Test, "loan-core-test", l.Test, "Test a test string.")
}

// Reset restores this instance to the default state.
//  * The default value of Test is ''.
func (l *LoanServiceOpts) Reset() {
	l.Test = ""
}

// ParseEnv tries to parse the environment variables into this instance. It will only set those values, which have been actually defined. If values cannot be parsed, an error is returned.
//  * Test is parsed from flag 'LOAN_CORE_TEST'
func (l *LoanServiceOpts) ParseEnv() error {
	if value, ok := os.LookupEnv("LOAN_CORE_TEST"); ok {
		l.Test = value
	}

	return nil
}
