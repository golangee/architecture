// Code generated by golangee/architecture. DO NOT EDIT.

package core

import (
	context "context"
)

// SecurityServiceMock is a mock implementation of SecurityService.
// ...can authenticate and authorize a user from various sources.
type SecurityServiceMock struct {
	// FromBearerFunc mocks the FromBearer function.
	FromBearerFunc func(ctx context.Context, bearer string) (User, error)
}

// FromBearer authenticates from a bearer token.
//
// The parameter 'ctx' is the context to control timeouts and cancellations.
//
// The parameter 'bearer' is the bearer token from e.g. a http header variable.
//
// The result 'User' is the authenticated user.
//
// The result 'error' indicates a violation of pre- or invariants and represents an implementation specific failure.
func (m SecurityServiceMock) FromBearer(ctx context.Context, bearer string) (User, error) {
	if m.FromBearerFunc != nil {
		return m.FromBearerFunc(ctx, bearer)
	}

	panic("mock not available: FromBearer")
}
